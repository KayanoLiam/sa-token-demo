# ================================================================================================
# SA-Token 演示项目配置文件
#
# 该配置文件包含了SA-Token演示项目的所有核心配置
# 包括应用基础配置、数据库配置、JPA配置和SA-Token框架配置
#
# 配置说明：
# - 应用配置：应用名称、服务端口等基础设置
# - 数据库配置：MySQL数据库连接参数
# - JPA配置：Hibernate ORM框架相关设置
# - SA-Token配置：权限认证框架的详细参数
#
# 注意事项：
# - 生产环境需要修改数据库密码等敏感信息
# - 根据实际需求调整SA-Token的安全策略
# - 建议使用配置中心管理生产环境配置
# ================================================================================================

# ================================================================================================
# 应用基础配置
# ================================================================================================

# 应用名称
# 用于标识当前Spring Boot应用，会在日志、监控等场景中显示
# 建议使用有意义的名称，便于运维管理
spring.application.name=sa-token-demo

# 服务端口
# 应用启动后监听的HTTP端口号
# 默认8080，这里设置为9191避免端口冲突
# 生产环境建议使用标准端口（80/443）或公司规范端口
server.port=9191

# ================================================================================================
# 数据库配置
# ================================================================================================

# 数据库连接URL
# 连接到本地MySQL数据库，端口1556，数据库名sa-token-demo
# 格式：jdbc:mysql://主机:端口/数据库名
# 参数说明：
# - localhost:1556 - 数据库服务器地址和端口
# - sa-token-demo - 数据库名称，需要提前创建
spring.datasource.url=jdbc:mysql://localhost:1556/sa-token-demo

# 数据库用户名
# 连接数据库使用的用户名
# 生产环境建议创建专用数据库用户，避免使用root
spring.datasource.username=root

# 数据库密码
# 连接数据库使用的密码
# 生产环境必须使用强密码，建议通过环境变量或配置中心管理
spring.datasource.password=121381121381

# 数据库驱动类名
# MySQL 8.0+ 使用com.mysql.cj.jdbc.Driver
# MySQL 5.x 使用com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ================================================================================================
# JPA/Hibernate 配置
# ================================================================================================

# DDL自动执行策略
# update: 根据实体类自动更新表结构，保留现有数据
# create: 每次启动都重新创建表（会丢失数据）
# create-drop: 启动时创建，关闭时删除表
# validate: 只验证表结构，不做修改
# none: 不执行任何DDL操作
# 开发环境使用update，生产环境建议使用validate
spring.jpa.hibernate.ddl-auto=update

# 是否在控制台显示SQL语句
# true: 显示执行的SQL语句，便于开发调试
# false: 不显示SQL语句，适合生产环境
# 生产环境建议设置为false，避免日志过多
spring.jpa.show-sql=true

# 是否格式化SQL语句
# true: 格式化SQL语句，便于阅读和调试
# false: 不格式化，SQL语句为单行显示
# 仅在show-sql=true时生效
spring.jpa.properties.hibernate.format_sql=true

# ================================================================================================
# SA-Token 权限认证框架配置
# ================================================================================================

# Token名称（同时也是Cookie名称）
# 客户端存储token时使用的key名称
# 前端需要在请求头或Cookie中使用此名称传递token
# 建议使用项目相关的名称，避免与其他系统冲突
sa-token.token-name=satoken

# Token有效期（单位：秒）
# 2592000秒 = 30天
# -1 表示永久有效（不推荐）
# 建议根据业务需求设置合理的过期时间
# 敏感系统建议设置较短的有效期（如2小时 = 7200秒）
sa-token.timeout=2592000

# Token最低活跃频率（单位：秒）
# 如果token超过此时间没有访问系统就会被冻结
# -1 表示不限制，永不冻结
# 设置此参数可以自动清理不活跃的token，节省内存
# 建议设置为有效期的一半，如：1296000（15天）
sa-token.active-timeout=-1

# 是否允许同一账号多地同时登录
# true: 允许同一用户在多个设备/浏览器同时登录
# false: 新登录会挤掉旧登录（单点登录）
# 根据业务安全要求选择：
# - 普通应用可以设置为true，提高用户体验
# - 敏感应用建议设置为false，提高安全性
sa-token.is-concurrent=true

# 在多人登录同一账号时，是否共用一个token
# true: 所有登录共用一个token，一个设备退出会影响其他设备
# false: 每次登录生成新token，各设备独立管理
# 建议设置为false，避免设备间相互影响
sa-token.is-share=false

# Token风格
# 可选值：
# - uuid: 标准UUID格式（推荐）
# - simple-uuid: 简化的UUID格式
# - random-32: 32位随机字符串
# - random-64: 64位随机字符串
# - random-128: 128位随机字符串
# - tik: 时间戳+随机数
# 建议使用uuid，兼容性好且安全性高
sa-token.token-style=uuid

# 是否输出操作日志
# true: 输出SA-Token的操作日志，便于调试和监控
# false: 不输出日志，适合生产环境
# 开发环境建议开启，生产环境根据需要决定
sa-token.is-log=true

# ================================================================================================
# SpringDoc OpenAPI 3.0 (Swagger) 配置
# ================================================================================================

# Swagger UI 访问路径
# 默认路径：/swagger-ui/index.html
# 自定义路径：/swagger-ui.html（更简洁）
springdoc.swagger-ui.path=/swagger-ui.html

# API文档访问路径
# 默认路径：/v3/api-docs
# JSON格式的API文档，可用于其他工具集成
springdoc.api-docs.path=/v3/api-docs

# 是否启用Swagger UI
# true: 启用Swagger UI界面
# false: 禁用Swagger UI（生产环境建议禁用）
springdoc.swagger-ui.enabled=true

# 包扫描路径
# 指定要扫描的Controller包路径
# 只有在此包下的Controller才会出现在API文档中
springdoc.packages-to-scan=com.viper.demo.Controller

# 是否显示请求持续时间
# true: 在Swagger UI中显示API请求的执行时间
# false: 不显示执行时间
springdoc.swagger-ui.display-request-duration=true

# 默认展开级别
# none: 不展开任何内容
# list: 只展开标签列表
# full: 展开所有内容
springdoc.swagger-ui.doc-expansion=list

# 是否显示扩展信息
# true: 显示扩展信息和示例
# false: 隐藏扩展信息
springdoc.swagger-ui.show-extensions=true

# 是否显示通用扩展信息
# true: 显示通用扩展信息
# false: 隐藏通用扩展信息
springdoc.swagger-ui.show-common-extensions=true