package com.viper.demo.Pojo;

import lombok.Data;

/**
 * 用户登录请求数据传输对象（DTO）
 *
 * 该类用于封装用户登录时提交的请求参数
 * 作为Controller层接收前端登录数据的载体
 *
 * 设计目的：
 * 1. 数据传输：封装前端提交的登录信息
 * 2. 参数验证：便于统一验证登录参数
 * 3. 安全隔离：避免直接使用实体类接收请求
 * 4. 接口规范：明确登录接口的参数要求
 *
 * 使用场景：
 * - 用户登录接口的请求参数
 * - 前端登录表单数据绑定
 * - 登录参数验证和处理
 * - API文档参数说明
 *
 * 数据流向：
 * 前端登录表单 -> HTTP请求 -> LoginRequest -> Controller -> Service
 *
 * 安全考虑：
 * - 密码字段不应该出现在日志中
 * - toString方法可能暴露密码信息
 * - 传输过程建议使用HTTPS加密
 * - 接收后应立即进行参数验证
 *
 * 扩展建议：
 * - 可添加验证码字段
 * - 可添加记住我选项
 * - 可添加登录设备信息
 * - 可添加参数验证注解
 *
 * JSON格式示例：
 * ```json
 * {
 *   "username": "admin",
 *   "password": "123456"
 * }
 * ```
 *
 * @author Viper
 * @version 1.0
 * @since 2024
 */
@Data
public class LoginRequest {

    /**
     * 用户名
     *
     * 用户登录时输入的用户名
     * 可以是用户名、邮箱或手机号（根据业务需求）
     *
     * 验证规则：
     * - 不能为空或null
     * - 长度限制：3-50个字符
     * - 格式验证：根据业务规则验证
     * - 去除首尾空格
     *
     * 支持的登录方式：
     * - 用户名登录：如"admin"
     * - 邮箱登录：如"admin@example.com"
     * - 手机号登录：如"13800138000"
     *
     * 安全注意：
     * - 不区分大小写（可选）
     * - 防止SQL注入
     * - 记录登录尝试日志
     * - 防止用户名枚举攻击
     *
     * 前端处理：
     * - 实时验证格式
     * - 自动去除空格
     * - 提示用户输入规范
     */
    private String username;

    /**
     * 密码
     *
     * 用户登录时输入的密码
     * 明文传输，服务端接收后进行验证
     *
     * 验证规则：
     * - 不能为空或null
     * - 长度限制：6-50个字符
     * - 与数据库中的密码进行比对
     * - 支持明文和加密两种验证方式
     *
     * 安全要求：
     * - 传输加密：建议使用HTTPS
     * - 不记录日志：避免密码泄露
     * - 及时清理：验证后立即清空
     * - 防暴力破解：限制登录尝试次数
     *
     * 密码策略：
     * - 最小长度要求
     * - 复杂度要求（可选）
     * - 过期策略（可选）
     * - 历史密码检查（可选）
     *
     * 处理流程：
     * 1. 接收明文密码
     * 2. 查询用户信息
     * 3. 密码验证（明文或加密）
     * 4. 返回验证结果
     * 5. 清理敏感信息
     *
     * 注意事项：
     * - 不要在toString中输出
     * - 不要记录到日志文件
     * - 验证失败时统一错误提示
     * - 考虑密码强度验证
     */
    private String password;
}
