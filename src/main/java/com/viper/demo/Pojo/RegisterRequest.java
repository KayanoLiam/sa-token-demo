package com.viper.demo.Pojo;

import lombok.Data;

/**
 * 用户注册请求数据传输对象（DTO）
 *
 * 该类用于封装用户注册时提交的请求参数
 * 作为Controller层接收前端注册数据的载体
 *
 * 设计目的：
 * 1. 数据传输：封装前端提交的注册信息
 * 2. 参数验证：便于统一验证注册参数
 * 3. 安全隔离：避免直接使用实体类接收请求
 * 4. 接口规范：明确注册接口的参数要求
 *
 * 使用场景：
 * - 用户注册接口的请求参数
 * - 前端注册表单数据绑定
 * - 注册参数验证和处理
 * - API文档参数说明
 *
 * 数据流向：
 * 前端注册表单 -> HTTP请求 -> RegisterRequest -> Controller -> Service -> User实体
 *
 * 验证规则：
 * - 用户名：必填，唯一性验证
 * - 密码：必填，强度验证
 * - 邮箱：必填，格式和唯一性验证
 * - 手机号：可选，格式验证
 *
 * 安全考虑：
 * - 密码字段不应该出现在日志中
 * - 所有输入都需要进行安全验证
 * - 防止恶意注册和垃圾数据
 * - 敏感信息传输加密
 *
 * 扩展建议：
 * - 可添加验证码字段
 * - 可添加用户协议同意字段
 * - 可添加邀请码字段
 * - 可添加参数验证注解
 *
 * JSON格式示例：
 * ```json
 * {
 *   "username": "newuser",
 *   "password": "123456",
 *   "email": "newuser@example.com",
 *   "phone": "13800138002"
 * }
 * ```
 *
 * @author Viper
 * @version 1.0
 * @since 2024
 */
@Data
public class RegisterRequest {

    /**
     * 用户名
     *
     * 用户注册时选择的用户名
     * 作为用户的唯一标识和登录凭证
     *
     * 验证规则：
     * - 必填字段，不能为空
     * - 长度：3-20个字符
     * - 格式：字母、数字、下划线组合
     * - 唯一性：全局唯一，不能重复
     * - 不区分大小写（可选）
     *
     * 业务规则：
     * - 注册后不可修改
     * - 不能使用系统保留词
     * - 不能包含敏感词汇
     * - 建议使用有意义的名称
     *
     * 前端验证：
     * - 实时检查可用性
     * - 格式验证提示
     * - 长度限制提示
     * - 重复性检查
     *
     * 后端处理：
     * - 去除首尾空格
     * - 格式验证
     * - 唯一性检查
     * - 敏感词过滤
     *
     * 错误提示：
     * - "用户名不能为空"
     * - "用户名长度为3-20个字符"
     * - "用户名只能包含字母、数字、下划线"
     * - "用户名已存在"
     */
    private String username;

    /**
     * 密码
     *
     * 用户注册时设置的登录密码
     * 需要满足一定的安全强度要求
     *
     * 验证规则：
     * - 必填字段，不能为空
     * - 长度：6-50个字符（建议8位以上）
     * - 强度：建议包含大小写字母、数字、特殊字符
     * - 不能与用户名相同
     * - 不能使用常见弱密码
     *
     * 安全要求：
     * - 传输加密：使用HTTPS
     * - 存储加密：使用哈希+盐值
     * - 不记录日志：避免密码泄露
     * - 强度验证：防止弱密码
     *
     * 密码策略：
     * - 最小长度：8个字符
     * - 复杂度：大小写+数字+特殊字符
     * - 黑名单：常见弱密码列表
     * - 个人信息：不能包含用户名、邮箱等
     *
     * 处理流程：
     * 1. 接收明文密码
     * 2. 强度验证
     * 3. 加密处理
     * 4. 存储到数据库
     * 5. 清理内存中的明文
     *
     * 用户体验：
     * - 实时强度提示
     * - 密码可见性切换
     * - 确认密码验证
     * - 安全建议提示
     */
    private String password;

    /**
     * 邮箱地址
     *
     * 用户注册时提供的邮箱地址
     * 用于账户验证、通知和找回密码
     *
     * 验证规则：
     * - 必填字段，不能为空
     * - 格式验证：符合邮箱格式规范
     * - 唯一性：全局唯一，不能重复
     * - 长度限制：最大100个字符
     * - 域名验证：检查邮箱域名有效性
     *
     * 业务规则：
     * - 注册后可以修改
     * - 需要邮箱验证激活
     * - 用于找回密码功能
     * - 系统通知发送
     *
     * 格式要求：
     * - 标准邮箱格式：user@domain.com
     * - 支持国际域名
     * - 不区分大小写
     * - 自动转换为小写存储
     *
     * 验证流程：
     * 1. 格式验证
     * 2. 域名有效性检查
     * 3. 唯一性验证
     * 4. 发送验证邮件
     * 5. 用户点击激活
     *
     * 安全考虑：
     * - 防止垃圾邮箱注册
     * - 邮箱域名黑名单
     * - 验证码防刷机制
     * - 激活链接时效性
     *
     * 错误提示：
     * - "邮箱地址不能为空"
     * - "邮箱格式不正确"
     * - "邮箱地址已被注册"
     * - "邮箱域名不支持"
     */
    private String email;

    /**
     * 手机号码
     *
     * 用户注册时提供的手机号码（可选）
     * 用于短信验证、通知和安全验证
     *
     * 验证规则：
     * - 可选字段，可以为空
     * - 格式验证：11位数字（中国大陆）
     * - 唯一性：建议唯一（根据业务需求）
     * - 号段验证：有效的手机号段
     * - 国际化：支持国际号码格式（可扩展）
     *
     * 业务规则：
     * - 注册后可以修改
     * - 可用于手机号登录
     * - 短信验证码验证
     * - 双因子认证
     *
     * 格式要求：
     * - 中国大陆：11位数字，如13800138000
     * - 国际格式：+86 138 0013 8000（可扩展）
     * - 存储格式：统一为纯数字
     * - 显示格式：带分隔符的友好格式
     *
     * 验证流程：
     * 1. 格式验证
     * 2. 号段有效性检查
     * 3. 唯一性验证（可选）
     * 4. 发送验证短信
     * 5. 用户输入验证码
     *
     * 扩展功能：
     * - 归属地查询
     * - 运营商识别
     * - 黑名单过滤
     * - 短信限流控制
     *
     * 用户体验：
     * - 自动格式化显示
     * - 实时格式验证
     * - 验证码倒计时
     * - 重发验证码功能
     *
     * 注意事项：
     * - 可以为空，不强制要求
     * - 如果填写则必须格式正确
     * - 考虑隐私保护
     * - 遵守相关法律法规
     */
    private String phone;
}
